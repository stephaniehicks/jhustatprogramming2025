{
  "hash": "7f3f42e497549ba2e0277be7de33458d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Project 1\"\nauthor: \n  - name: Stephanie Hicks\n    url: https://stephaniehicks.com\n    affiliation: Department of Biostatistics, Johns Hopkins\n    affiliation_url: https://publichealth.jhu.edu\ndescription: \"Building a website and practicing with command-line tools\"\ndate: 2025-10-23\nknitr: true\ndraft: false\n---\n\n\n# Background\n\n\n**Due date: November 7 at 11:59pm**\n\nThe goal of this assignment is to practice some of the skills we have been learning about in class around building data analyses and quarto by building and deploying a Quarto website. You also are asked to practice with some command-line and version control skills more formally. \n\n### To submit your project \n\nPlease use this Quarto file (`.qmd`) and fill in the requested components by adding the URLs pointing to the GitHub repositories and deployed websites. Render this file to a **HTML file**. \n\nYou will push the `.qmd` file and rendered HTML file to a private GitHub repostory on GitHub classroom. The link to create a private GitHub repository for yourself to complete Project 1 will be posted in CoursePlus \n\n::: {.callout-note}\n\nThis creates an empty repository. You will need to clone the reopository locally, add your code, and push your code from your local repo to the remote repository on GitHub Classroom when ready. \n\nPlease **show all the code**, if relevant to a section.\n\n:::\n\nThe TAs will grade the contents in the GitHub repo by cloning the repo and checking for all the things described below. \n\n# Part 1\n\nCreate a public GitHub repository on your own GitHub account and build a small website to introduce yourself to others in the course. You will also create a small data analysis on one of the webpages to practice literate programming in [Quarto](https://quarto.org). \n\n![](../../images/quarto_schematic.png)\n\n## 1. Create a GitHub repo for your website\n\nCreate a new public GitHub repository titled `biostat777-intro-<firstname>-<lastname>` (where you replace `<firstname>` with your first name and `<lastname>` with your last name) in your own personal GitHub account (e.g. `https://github.com/<yourgithubusername>/biostat777-intro-<firstname>-<lastname>`).\n\n## 2. Build a website using Quarto\n\nCreate a new project locally within RStudio or VSCode and build a website for yourself. Your website should include the following: \n\n1. A home/landing page. This is home page that someone will land on your website. At minimum it should include your name, a short summary about yourself (max 2-3 sentences), and a picture of something you enjoy to do for fun (or a picture of yourself if you are comfortable sharing one). \n2. A page titled 'About'. This page should describe who you are in greater detail. It could include your professional interests and your educational and/or professional background and/or experience. It could also include any personal information you feel conformable sharing on the website. \n3. A data analysis page called 'Example analysis'. You can pick any dataset you wish you analyze. In this webpage, you will analyze a dataset and summarize the results. The requirements for this webpage are the following: \n    - You must describe what is the question you aim to answer with the data and data analysis. \n    - You must describe who is the intended audience for the data analysis. \n    - You must describe and link to where the original data come from that you chose. \n    - You must include a link to a data dictionary for the data or create one inside the webpage. \n    - Your analysis must include some minimal form of data wrangling with you using at least five different functions from `dplyr` or `tidyr`. \n    - Your analysis should include at least three plots with you using at least three different `geom_*()` functions from `ggplot2` (or another package with `geom_*()` functions). \n    - Plots should have titles, subtitles, captions, and human-understandable axis labels. \n    - At least one plot should using a type of faceting (`facet_grid()` or `facet_wrap()`). \n    - Your analysis must include one image or table (not one you created yourself, but one you have saved locally or one from the web). \n    - Your analysis must include at least two different [callout blocks](https://quarto.org/docs/authoring/callouts.html).\n    - Your analysis must include a `.bib` file, which you use to reference at least three unique citations. For example, it could be to a website or paper from where the original data came from or it could be to a paper describing a method you are using to analyze the data. \n    - Your analysis must include the use of at least 1 [margin content](https://quarto.org/docs/authoring/article-layout.html#margin-content). \n    - You must summarize your analysis and/or results with a paragraph (4-6 sentences).\n    - At the end of the data analysis, list out each of the functions you used from each of the packages (`dplyr`, `tidyr`, and `ggplot2`) to help the TA with respect to making sure you met all the requirements described above. \n\n## 3. Include a `README.md` file\n\nYour local repository should include a `README.md` file describing who is the author of the website and a link to the website after it has been deployed. Other things you might include are the technical details for how the website was created and/or deployed. \n\n## 4. Deploy your website\n\nDeploy your website e.g. using [Quarto Pub](https://quarto.org/docs/publishing/quarto-pub.html), [GitHub pages](https://quarto.org/docs/publishing/github-pages.html), or [Netlify](https://quarto.org/docs/publishing/netlify.html), etc. \n\n::: {.callout-note}\n\nDeploying your website to RPubs will not be accepted.\n\n:::\n\n## 5. Share your website\n\nGo to the Discussion Board in CoursePlus and write a short post with a link (URL) to your website (and URL to the corresponding GitHub repository) that you created. Also, list the URLs below for the purposes of grading. \n\nAs you read the introductions from other folks in the class, feel free to comment/reply using Discussion board.\n\n- **Link to your GitHub repository**: [Delete this text and replace the text with the link to the public GitHub repo you created above for your website]\n\n- **Link to your deployed website**: [Delete this and replace the text with the link to the public deployed website you created above]\n\n# Part 2\n\nConsider the dataset called `students.csv` with the following contents: \n\n```\nID,Name,Age,Gender,Grade,Subject\n1,Alice,20,F,88,Math\n2,Bob,22,M,76,History\n3,Charlie,23,M,90,Math\n4,Diana,21,F,85,Science\n5,Eve,20,F,92,Math\n6,Frank,22,M,72,History\n7,Grace,23,F,78,Science\n8,Heidi,21,F,88,Math\n9,Ivan,20,M,85,Science\n10,Judy,22,F,79,History\n```\n\n1. Use [`wget`](https://www.gnu.org/software/wget) or [`curl`](https://curl.se/docs/tutorial.html) to download the `students.csv` file locally from [here](https://github.com/stephaniehicks/jhustatprogramming2025/blob/main/projects/01-project/students.csv).\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Add your solution here\n\n```\n:::\n\n\n2. Display the contents of the `students.csv` file using the `cat` command.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Add your solution here\n\n```\n:::\n\n\n3. Display only the first 5 lines of the file using `head` to show the first few lines. \n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Add your solution here\n\n```\n:::\n\n\n4. Display only the last 3 lines of the file using `tail` to show the last few lines.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Add your solution here\n\n```\n:::\n\n\n5. Count the number of lines in the file using the `wc` command to count the lines.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Add your solution here\n\n```\n:::\n\n\n6. Find all students who are taking \"Math\" as a subject using `grep` to filter lines with the subject \"Math\".\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Add your solution here\n\n```\n:::\n\n\n7. Find all female students using `grep` or `awk` to filter based on gender.\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Add your solution here\n\n```\n:::\n\n\n8. Sort the file by the students' ages in ascending order. Use `sort` to order by the \"Age\" column.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Add your solution here\n\n```\n:::\n\n\n1. Find the unique subjects listed in the file. Use `cut`, `sort`, and `uniq` to extract unique subjects.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Add your solution here\n\n```\n:::\n\n\n10. Calculate the average grade of the students. Use `awk` to sum the grades and divide by the number of students.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Add your solution here\n\n```\n:::\n\n\n11. Replace all occurrences of \"Math\" with \"Mathematics\" in the file. Use `sed` to perform the replacement.\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Add your solution here\n\n```\n:::\n\n\n12. Put all the commands into a shell script (`.sh`) file and run the command below to show the output from all the commands together. \n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Add your solution here \n\n```\n:::\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}